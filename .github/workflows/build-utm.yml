name: Build LnOS UTM VM

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'build-utm-ci.sh'
      - 'scripts/**'
      - 'utm-templates/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'build-utm-ci.sh'
      - 'scripts/**'
      - 'utm-templates/**'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'utm'
        type: choice
        options:
        - utm
        - all

jobs:
  build-utm:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup environment
      run: |
        echo "Setting up build environment..."
        pwd
        ls -la
        
    - name: Make scripts executable
      run: |
        chmod +x ./scripts/build-utm-ci.sh
        chmod +x ./scripts/build-utm-asahi.sh
        chmod +x ./scripts/setup-utm-manual.sh
        chmod +x ./scripts/create-utm-manual.sh
        
    - name: Install dependencies
      run: |
        # Install Homebrew if not available
        if ! command -v brew &> /dev/null; then
          echo "Installing Homebrew..."
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        fi
        
        # Install qemu-img for disk image creation
        if ! command -v qemu-img &> /dev/null; then
          echo "Installing qemu..."
          brew install qemu
        fi
        
        # Install UTM if not available
        if ! command -v utmctl &> /dev/null && [[ ! -d "/Applications/UTM.app" ]]; then
          echo "Installing UTM..."
          brew install --cask utm
        fi
        
    - name: Build UTM VM
      run: |
        echo "Building UTM VM..."
        ./scripts/build-utm-ci.sh
        
    - name: Validate build artifacts
      run: |
        echo "Validating build artifacts..."
        
        # Check that required files exist
        if [[ ! -f "out/lnos-asahi-$(date +%Y.%m.%d).utm/config.plist" ]]; then
          echo "❌ UTM configuration missing"
          exit 1
        fi
        
        if [[ ! -f "out/lnos-asahi-$(date +%Y.%m.%d).utm/Images/disk0.qcow2" ]]; then
          echo "❌ Disk image missing"
          exit 1
        fi
        
        if [[ ! -f "out/lnos-asahi-$(date +%Y.%m.%d).utm/Images/asahi-installer.iso" ]]; then
          echo "❌ Asahi installer ISO missing"
          exit 1
        fi
        
        if [[ ! -f "out/lnos-asahi-$(date +%Y.%m.%d).utm/Data/lnos-scripts/LnOS-installer.sh" ]]; then
          echo "❌ LnOS installer script missing"
          exit 1
        fi
        
        if [[ ! -f "out/lnos-asahi-$(date +%Y.%m.%d)-ci.zip" ]]; then
          echo "❌ Distribution ZIP missing"
          exit 1
        fi
        
        echo "✅ All build artifacts validated"
        
    - name: List build artifacts
      run: |
        echo "Build artifacts:"
        ls -la out/
        echo ""
        echo "UTM bundle contents:"
        ls -la out/lnos-asahi-$(date +%Y.%m.%d).utm/
        echo ""
        echo "Scripts directory:"
        ls -la out/lnos-asahi-$(date +%Y.%m.%d).utm/Data/lnos-scripts/
        
         - name: Upload build artifacts
       uses: actions/upload-artifact@v4
       with:
         name: lnos-utm-vm
         path: |
           out/lnos-asahi-$(date +%Y.%m.%d).utm/
           out/lnos-asahi-$(date +%Y.%m.%d)-ci.zip
         retention-days: 30
         
     - name: Create release assets
       if: github.event_name == 'workflow_dispatch'
       run: |
         echo "Creating release assets..."
         
         # Create a release directory
         mkdir -p release/
         
         # Copy the UTM bundle
         cp -r out/lnos-asahi-$(date +%Y.%m.%d).utm/ release/
         
         # Copy the distribution ZIP
         cp out/lnos-asahi-$(date +%Y.%m.%d)-ci.zip release/
         
         # Create a simple README for the release
         echo "# LnOS UTM Virtual Machine" > release/README.md
         echo "" >> release/README.md
         echo "Automated build for Apple Silicon Macs." >> release/README.md
         echo "Build date: $(date)" >> release/README.md
        
    - name: Upload release assets
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: lnos-utm-release
        path: release/
        retention-days: 90
        
    - name: Build summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **UTM VM Build Completed Successfully**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Build Artifacts:**" >> $GITHUB_STEP_SUMMARY
        echo "- UTM Bundle: \`out/lnos-asahi-$(date +%Y.%m.%d).utm/\`" >> $GITHUB_STEP_SUMMARY
        echo "- Distribution ZIP: \`out/lnos-asahi-$(date +%Y.%m.%d)-ci.zip\`" >> $GITHUB_STEP_SUMMARY
        echo "- Disk Image: \`Images/disk0.qcow2\`" >> $GITHUB_STEP_SUMMARY
        echo "- Asahi ISO: \`Images/asahi-installer.iso\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**System Configuration:**" >> $GITHUB_STEP_SUMMARY
        echo "- Architecture: aarch64 (Apple Silicon)" >> $GITHUB_STEP_SUMMARY
        echo "- Memory: 4GB" >> $GITHUB_STEP_SUMMARY
        echo "- CPU Cores: 4" >> $GITHUB_STEP_SUMMARY
        echo "- Disk Size: 20GB" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the artifacts" >> $GITHUB_STEP_SUMMARY
        echo "2. Import the UTM bundle or follow manual setup" >> $GITHUB_STEP_SUMMARY
        echo "3. Install Asahi Linux and LnOS" >> $GITHUB_STEP_SUMMARY
